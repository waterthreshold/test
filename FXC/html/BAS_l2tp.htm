<html>
<head>
<title>W6B-T223-001</title>
<meta content="width=device-width, initial-scale=1.0, shrink-to-fit=no" name="viewport">
<link href="css/new_custom.css" rel="stylesheet" type="text/css">
<script src="jquery.js"></script>
<script src="script/script.js"></script>
<script src="func.js"></script>
<script src="utility.js"></script>
</head>

<body onload="loadSettings();loadcheck();SkipParentalControlCheck=0" class="page-body">
<div class="container-fluid frame-content" id="frame-content">
    <div class="row">
        <div class="col-md-12">
            <form id="target"  name="formname" method="POST" action="l2tp.cgi">
                <input type="hidden" name="buttonHit">
                <input type="hidden" name="buttonValue"> 
                <div class="card card-notify card-yellow ">
                    <div class="card-header card-flex">
                        <div class="card-title">Does your Internet connection require a login?</div>
                        <div class="card-margin-left">
                            <button type="button" name="Edit" class="btn" onClick="doTypeChange(0)">NO</button>
                            <button type="button" name="Edit" class="btn" onClick="">YES</button>
                        </div>
                    </div>

                    <input type="hidden" id="loginreq" name="loginreq" value="pppoe">
                </div>
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-pills">
                            <li class="nav-item" onclick="window.location.href='BAS_pppoe.htm'">
                                <a class="nav-link">PPPoE</a>
                            </li>
                            <li class="nav-item" onclick="window.location.href='BAS_pptp.htm'">
                                <a class="nav-link">PPTP</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active">L2TP</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                    	<div class="mui-textfield">
                            <input id="l2tp_username" class="form-control" type="text" name="l2tp_username" maxlength="63" value="NVRAM_l2tp_user_name">
                            <label tabindex="-1">Login</label>
                        </div>
                        <div class="mui-textfield">
                            <input id="l2tp_passwd" type="password" class="form-control" name="l2tp_passwd" maxlength="63" value="NVRAM_l2tp_user_passwd" onfocus="pw_onfocus();">
                            <label tabindex="-1">Password</label>
                        </div>
                        <div class="mui-textfield">
                            <select class="form-control" id="l2tp_dod" name="l2tp_dod" onChange="setConnMode()" size="1">
                                <option value=0>Always On</option>
                                <option value=1>Dial on Demand</option>
                                <option value=2>Manually Connect</option>
                            </select>
                            <label tabindex="-1">Connection Mode</label>
                        </div>
                        <div class="mui-textfield">
                            <input id="l2tp_idletime" class="form-control" type="text" name="l2tp_idletime" maxlength="3" value="NVRAM_l2tp_idle_time">
                            <label tabindex="-1">Idle Timeout (In Minutes)</label>
                        </div>
                    </div>
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">L2TP Setup</div>
                    </div>
                    <div class="card-body">
                    	<div class="mui-textfield input-ip">
                    		<input id="myip1" type="text" name="myip_1" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                    		<input id="myip2" type="text" name="myip_2" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                    		<input id="myip3" type="text" name="myip_3" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                    		<input id="myip4" type="text" name="myip_4" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                    		<label tabindex="-1">My IP Address</label>
                    	</div>
                    	<div class="mui-textfield input-ip">
                    		<input id="mymask1" type="text" name="mymask_1" class="form-control" maxlength="3" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                    		<input id="mymask2" type="text" name="mymask_2" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                    		<input id="mymask3" type="text" name="mymask_3" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                    		<input id="mymask4" type="text" name="mymask_4" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                    		<label tabindex="-1">Subnet Mask</label>
                    	</div>
                    	<div class="mui-textfield input-ip">
                    		<input id="mygw1" type="text" name="mygw_1" class="form-control" maxlength="3" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                    		<input id="mygw2" type="text" name="mygw_2" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                    		<input id="mygw3" type="text" name="mygw_3" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                    		<input id="mygw4" type="text" name="mygw_4" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                    		<label tabindex="-1">Gateway IP Address</label>
                    	</div>
                    	<div class="mui-textfield">
                            <input id="l2tp_serv_ip" class="form-control" type="text" name="l2tp_serv_ip" maxlength="63" value="" onBlur="dns_update();">
                            <label tabindex="-1">Server Address</label>
                        </div>
                    </div>
                    <% lang_cgi_get_param("region_func","ru_start"); %>
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">IP Address Setup</div>
                    </div>
                    <div class="card-body">
                        <p>Internet IP Address</p>
                        <div class="form-check form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="wan_assign_dynamic" type="radio" name="WANAssign" value="Dynamic" onClick="setIP()">Get Dynamically from ISP
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="wan_assign_fixed" type="radio" name="WANAssign" value="Fixed" onClick="setIP()">Use Static IP Address
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="mui-textfield input-ip mui-textfield-next">
                        	<input id="wpethr1" type="text" name="WPethr1" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                        	<input id="wpethr2" type="text" name="WPethr2" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                        	<input id="wpethr3" type="text" name="WPethr3" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                        	<input id="wpethr4" type="text" name="WPethr4" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                        </div>
                    </div>
                    <% lang_cgi_get_param("region_func","ru_end"); %>
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">DNS Address Setup</div>
                    </div>
                    <div class="card-body">
                        <p>Domain Name Server (DNS) Address</p>
                        <div class="form-check form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="dns_assign_auto" type="radio" name="DNSAssign" value="0" onClick="setDNS()">
                                Get Automatically from ISP
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="dns_assign_static" type="radio" name="DNSAssign" value="1" onClick="setDNS()">
                                Use These DNS Servers
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="mui-textfield input-ip">
                        	<input id="primary_dns_address1" type="text" name="DAddr1" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,1)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,0)">.
                        	<input id="primary_dns_address2" type="text" name="DAddr2" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,0)">.
                        	<input id="primary_dns_address3" type="text" name="DAddr3" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,0)">.
                        	<input id="primary_dns_address4" type="text" name="DAddr4" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,1)">
                        	<label tabindex="-1">Primary DNS</label>
                        </div>
                        <div class="mui-textfield input-ip">
                        	<input id="second_dns_address1" type="text" name="PDAddr1" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,1)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,0)">.
                        	<input id="second_dns_address2" type="text" name="PDAddr2" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,0)">.
                        	<input id="second_dns_address3" type="text" name="PDAddr3" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,0)">.
                        	<input id="second_dns_address4" type="text" name="PDAddr4" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');return false;} jumpcheck(this,1)">
                        	<label tabindex="-1">Secondary DNS</label>
                        </div>
                    </div>
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">MAC Address Setup</div>
                    </div>
                    <div class="card-body">
                        <p>Router MAC Address</p>
                        <div class="form-check form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mac_assign_default" type="radio" name="MACAssign" value="0" onClick="setMAC()">
                                Use Default Address
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mac_assign_computer" type="radio" name="MACAssign" value="1" onClick="setMAC()">
                                Use Computer MAC Address
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mac_assign_define" type="radio" name="MACAssign" value="2" onClick="setMAC()">
                                Use This MAC Address
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <input id="spoof_mac" type="text" class="form-control form-check-next" name="Spoofmac" maxlength="17" value="" onFocus="if(DisableFixedMAC) this.blur()">
                    </div>
                    <div class="card-bottom">
                        <div class="pull-right">
                        	<button id="apply" type="submit" value="SUBMIT"  onClick="buttonClick(this,'Apply');return checkData()" name="apply" class="<%gui_get_guest_or_admin_mode("0");%> btn btn-primary btn-mg-15 btn-round">Apply</button>
                        </div>
                    </div>
                </div>

                <input type="hidden" name="runtest" value="<% basic_cgi_get_param("runtest"); %>">
				<input name=wan_ipaddr type=hidden value= "NVRAM_wan_ipaddr">
				<input name=l2tp_localip type=hidden value= "NVRAM_l2tp_localip">
				<input name=l2tp_user_ip type=hidden value= "NVRAM_l2tp_user_ip">
				<input name=serv_ip type=hidden value= "NVRAM_l2tp_serv_ip">
				<input name=wan_dns_sel type=hidden value= "NVRAM_wan_dns_sel">
				<input name=wan_dns1_pri type=hidden value= "<% nvram_list("wan_dns1", 0); %>">
				<input name=wan_dns1_sec type=hidden value= "<% nvram_list("wan_dns1", 1); %>">
				<input name=wan_hwaddr_sel type=hidden value= "NVRAM_wan_hwaddr_sel">
				<input name=wan_hwaddr_def type=hidden value= "NVRAM_wan_hwaddr">
				<input name=wan_hwaddr2 type=hidden value= "NVRAM_wan_hwaddr2">
				<input name=wan_hwaddr_pc type=hidden value= "<% basic_cgi_get_param("pcmac"); %>">
				<input name=l2tp_gateway type=hidden value="NVRAM_l2tp_gateway_ip">
				<input name=gui_region type=hidden value="<%lang_cgi_get_param("gui_region");%>">
				<input name=l2tp_user_netmask type=hidden value="NVRAM_l2tp_user_netmask">
				<input name=static_l2tp_enable type=hidden value= "NVRAM_static_l2tp_enable">
				<input name=l2tp_ip_sel type=hidden value= "NVRAM_l2tp_ip_sel">
				<input name=ipv6_proto type=hidden value= "NVRAM_ipv6_proto">
				<input name=ipv6_proto_auto type=hidden value= "NVRAM_ipv6_proto_auto">
				<input name=dial_on_demand_warning type=hidden value= "<% get_dial_demand_warning(); %>">
				<input name=parental_control type=hidden value= "NVRAM_ParentalControl">
				<input name=parental_circle type=hidden value= "NVRAM_enable_circle_control">
				<input name=wan_auto_dns_pri type=hidden value= "<% nvram_list("wan_dns", 0); %>">
				<input name=wan_auto_dns_sec type=hidden value= "<% nvram_list("wan_dns", 1); %>">
				<input name="wan_aggr" type=hidden value="NVRAM_bond_wan">
				<input name=wan_proto type=hidden value= "NVRAM_wan_proto">
				<input name=spc_provisioned type=hidden value= "<% d2_match("CircleStatus.activationStatus","provisioned","1"); %>">
				<input name=enable_ap_mode type=hidden value= "NVRAM_enable_ap_mode">
            </form>
        </div>
    </div>
</div>
</body>

<script>
var DisableFixedIP = false;
var DisableFixedDNS = false;
var DisableFixedMAC = false;
var MacAddress;
var DodDisable = false;
var DodIndex = NVRAM_l2tp_dod;
var SkipParentalControlCheck=1;
var CurrentDodIndex;

$(document).ready(function()
{	
    $("#target").submit(function() {
        buttonFilter();
    });
});

function checkType(wan_proto) // called from basictop.htm
{
	if (1)
	{
		if (wan_proto == "pppoe")
		    window.location.href = "BAS_pppoe.htm";
		else if (wan_proto == "pptp")
		    window.location.href = "BAS_pptp.htm";
		else if (wan_proto == "bpa")
		    window.location.href = "BAS_bpa.htm";
		else if (wan_proto == "l2tp")
		    window.location.href = "BAS_l2tp.htm";
		<% gui_cgi_check_feature_support("orange_isp", "js", "start"); %>
		else if (wan_proto == "orange_pppoe")
		    window.location.href = "BAS_orange_pppoe.htm";
		else if (wan_proto == "orange_dhcp")
		    window.location.href = "BAS_orange_dhcp.htm";
		<% gui_cgi_check_feature_support("orange_isp", "js", "end"); %>
		else
		    window.location.href = "BAS_ether.htm";
	}
	else 
	    window.setTimeout(checkType(),300);
}

function loadcheck()
{
	var cf = document.forms[0];
	var region_gui = cf.gui_region.value;

 	MacAddress=document.formname.Spoofmac.value;
	if (region_gui == "Russian")
		setIP();
	setDNS();
	setMAC();
}

function setIP()
{
    var cf = document.forms[0];
    var dflag = cf.WANAssign[0].checked;
    var region_gui = cf.gui_region.value;
    setDisabled(dflag,cf.WPethr1,cf.WPethr2,cf.WPethr3,cf.WPethr4);
    
    DisableFixedIP = dflag;
}

function isParentalControlEnable()
{
	var cf = document.forms[0];
    if(((cf.parental_control.value=='1')) && (SkipParentalControlCheck==0))
        return true;
    else
        return false;
}

function isCircleControlEnable()
{
	var cf = document.forms[0];
    if(( (cf.parental_circle.value=='1')) && (SkipParentalControlCheck==0))
        return true;
    else
        return false;
}

function isSPCEnable()
{
	var cf = document.forms[0];
    if(( (cf.spc_provisioned.value=='1')) && (cf.enable_ap_mode.value!='1'))
        return true;
    else
        return false;
}

function setDNS()
{
	var cf = document.forms[0];

	var dflag = (cf.DNSAssign[0].checked || cf.DNSAssign[1].disabled);

  if(isParentalControlEnable() && cf.DNSAssign[0].checked)
  {
  	alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');
		cf.DNSAssign[1].checked=true;
    dflag=false;      
  }

  if(isCircleControlEnable() && cf.DNSAssign[1].checked)
  {
    alert('The DNS Server setup will not take effect due to Parental Controls is enabled. If you need to configure DNS manually, please disable the Parental Controls.');
    cf.DNSAssign[0].checked=true;
  }

    if(isSPCEnable())
    {
        dflag=true; 
    }
	setDisabled(dflag,cf.DAddr1,cf.DAddr2,cf.DAddr3,cf.DAddr4,cf.PDAddr1,cf.PDAddr2,cf.PDAddr3,cf.PDAddr4);
	DisableFixedDNS = dflag;
}
function setMAC()
{
	var cf = document.forms[0];

	if (cf.MACAssign[0].checked)
		cf.Spoofmac.value = cf.wan_hwaddr_def.value;
	else if(cf.MACAssign[1].checked)
		cf.Spoofmac.value = cf.wan_hwaddr_pc.value;
	else if (cf.MACAssign[2].checked)
		cf.Spoofmac.value = cf.wan_hwaddr2.value;

	if (cf.MACAssign[2].checked)
		cf.Spoofmac.disabled = false;
	else
		cf.Spoofmac.disabled = true;
	DisableFixedMAC = cf.Spoofmac.disabled;
}

function setConnMode()
{
    var cf = document.forms[0];
    var conn_mode = cf.l2tp_dod.selectedIndex;

    if(conn_mode == 1) // Dial on Demand
        DodDisable = false;
    else
        DodDisable = true;
    var msg = "";
    if((conn_mode != 1) && !_isNumeric(cf.l2tp_idletime.value))
    {
        cf.l2tp_dod.selectedIndex = DodIndex;
        if(cf.l2tp_idletime.value.length<=0)
            msg+= "Please enter the idle time.n";
        else if(!_isNumeric(cf.l2tp_idletime.value))
            msg+= "Invalid idle time,please enter proper numeral.";
        if (msg.length > 1)
        {
            alert(msg);
            return false;
        }
    }
    else
    {
        DodIndex = cf.l2tp_dod.selectedIndex;
        setDisabled(DodDisable,cf.l2tp_idletime);
    }
    return true;
}

function checkData()
{
	var cf = document.forms[0];
	var msg = "";
	var region_gui = cf.gui_region.value;
	var wan_ip  = "NVRAM_l2tp_user_ip";
	var openvpnEnable = "NVRAM_openvpnActive";
    var conn_mode = cf.l2tp_dod.selectedIndex;
	
    var wan_proto = "NVRAM_wan_proto";
    var pppoe_single_login = "NVRAM_single_pppoe_login";

    if(cf.dial_on_demand_warning.value==1)
	  {
            if((conn_mode == 1 || conn_mode == 2)) // Dial on Demand and manually
            {
                if(!confirm(""))
                {
            	      cf.l2tp_dod.selectedIndex=CurrentDodIndex;
                    return false;
                }
            }
    }

    if (wan_proto == "pppoe" && cf.ipv6_proto.value == "pppoe" && pppoe_single_login == 1)
    {
        if (!confirm("<%getstr("pppoe_share_warning")%>"))
            return false;
    }

	msg+= checkBlank(cf.l2tp_username, "User Name");
	if(cf.l2tp_idletime.value.length<=0)
	 msg+= "Please enter the idle time.n";
	else if(!_isNumeric(cf.l2tp_idletime.value))
	 msg+= "Invalid idle time,please enter proper numeral.";
	
	if((cf.myip_1.value.length>0)||(cf.myip_2.value.length>0)||(cf.myip_3.value.length>0)||(cf.myip_4.value.length>0))
	{
		if(!((cf.mymask_1.value.length>0)||(cf.mymask_2.value.length>0)||(cf.mymask_3.value.length>0)||(cf.mymask_4.value.length>0)))
		{
			if(!checkIP(cf.myip_1,cf.myip_2,cf.myip_3,cf.myip_4,255))
			{
				if (cf.myip_1.value > 191) //class C
				{
					cf.mymask_1.value = 255;
					cf.mymask_2.value = 255;
					cf.mymask_3.value = 255;
					cf.mymask_4.value = 0;
				}
				else if (cf.myip_1.value > 127) //class B
				{
					cf.mymask_1.value = 255;
					cf.mymask_2.value = 255;
					cf.mymask_3.value = 0;
					cf.mymask_4.value = 0;
				}
				else //class A
				{
					cf.mymask_1.value = 255;
					cf.mymask_2.value = 0;
					cf.mymask_3.value = 0;
					cf.mymask_4.value = 0;
				}
			}
		}
		else if(checkIP(cf.mymask_1,cf.mymask_2,cf.mymask_3,cf.mymask_4,255))
			msg += "Invalid subnet mask. Please enter it again.n";
		
		
		if(checkIP(cf.myip_1,cf.myip_2,cf.myip_3,cf.myip_4,255))
			msg+= "Invalid IP address. Please enter it again, or leave it blank.";
		else
		{
			cf.myip_1.value = parseInt(cf.myip_1.value,10);
			cf.myip_2.value = parseInt(cf.myip_2.value,10);
			cf.myip_3.value = parseInt(cf.myip_3.value,10);
			cf.myip_4.value = parseInt(cf.myip_4.value,10);
		}

		if (cf.DNSAssign[1].checked )
		{
			var myIpAddr = (cf.myip_1.value << 24) | (cf.myip_2.value << 16) | (cf.myip_3.value << 8) | (cf.myip_4.value);
			var netMask = (cf.mymask_1.value << 24) | (cf.mymask_2.value << 16) | (cf.mymask_3.value << 8) | (cf.mymask_4.value);
			var dnsIpAddr1 = (cf.DAddr1.value << 24) | (cf.DAddr2.value << 16) | (cf.DAddr3.value << 8) | (cf.DAddr4.value);
			var dnsIpAddr2 = (cf.PDAddr1.value << 24) | (cf.PDAddr2.value << 16) | (cf.PDAddr3.value << 8) | (cf.PDAddr4.value);
			if(((myIpAddr&netMask) != (dnsIpAddr1&netMask)) && ((myIpAddr&netMask) != (dnsIpAddr2&netMask)))
			{
				if(!((cf.mygw_1.value.length>0)||(cf.mygw_2.value.length>0)||(cf.mygw_3.value.length>0)||(cf.mygw_4.value.length>0)))
				{
					msg+= "Invalid gateway IP address. Please enter it again.";
				}
			}
		}

		//static_l2tp_enable means the internal pppoe
		cf.static_l2tp_enable.value = 1;
	}
	else
		cf.static_l2tp_enable.value = 0;

	if((cf.mygw_1.value.length>0)||(cf.mygw_2.value.length>0)||(cf.mygw_3.value.length>0)||(cf.mygw_4.value.length>0))
	{
		var myIpAddr = (cf.myip_1.value << 24) | (cf.myip_2.value << 16) | (cf.myip_3.value << 8) | (cf.myip_4.value);
		var netMask = (cf.mymask_1.value << 24) | (cf.mymask_2.value << 16) | (cf.mymask_3.value << 8) | (cf.mymask_4.value);
		var myGateway = (cf.mygw_1.value << 24) | (cf.mygw_2.value << 16) | (cf.mygw_3.value << 8) | (cf.mygw_4.value);
		var tmpip = cf.myip_1.value+'.'+cf.myip_2.value+'.'+cf.myip_3.value+'.'+cf.myip_4.value;
		var tmpgateway = cf.mygw_1.value+'.'+cf.mygw_2.value+'.'+cf.mygw_3.value+'.'+cf.mygw_4.value;
	
		if(checkIP(cf.mygw_1,cf.mygw_2,cf.mygw_3,cf.mygw_4,255))
			msg+= "Invalid gateway IP address. Please enter it again.";
		//else if((myIpAddr&netMask) != (myGateway&netMask))
		//{
		//	msg+= 'Error: IP Address' +tmpip+ 'is in a different subnet as the gateway address'+ tmpgateway+'\n';
		//}
		else
		{
			cf.mygw_1.value = parseInt(cf.mygw_1.value,10);
			cf.mygw_2.value = parseInt(cf.mygw_2.value,10);
			cf.mygw_3.value = parseInt(cf.mygw_3.value,10);
			cf.mygw_4.value = parseInt(cf.mygw_4.value,10);
		}
	}

	var data;
	data = cf.l2tp_serv_ip.value.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/);
	if ((data && !isValidIPaddr(cf.l2tp_serv_ip.value))
		|| cf.l2tp_serv_ip.value == ""
		|| cf.l2tp_serv_ip.value.match( /[^\x20-\x7E]/ ))
		msg+= "Invalid server address. Please enter it again.n";
 
    if (region_gui == "Russian")
    {
		if(cf.WANAssign[1].checked)
		{
			if(checkIP(cf.WPethr1,cf.WPethr2,cf.WPethr3,cf.WPethr4,254)||(parseInt(cf.WPethr4.value,10)==0))
				msg+= "Invalid static IP address.n";
			else
			{
				cf.WPethr1.value = parseInt(cf.WPethr1.value,10);
				cf.WPethr2.value = parseInt(cf.WPethr2.value,10);
				cf.WPethr3.value = parseInt(cf.WPethr3.value,10);
				cf.WPethr4.value = parseInt(cf.WPethr4.value,10);
			}
			cf.l2tp_localip.value = cf.WPethr1.value+'.'+cf.WPethr2.value+'.'+cf.WPethr3.value+'.'+cf.WPethr4.value;
			
		}
		else
		{
			cf.l2tp_localip.value = "0.0.0.0";
		}
    }
	if(cf.DNSAssign[1].checked && !cf.DNSAssign[1].disabled)
	{	
		if(checkIP(cf.DAddr1,cf.DAddr2,cf.DAddr3,cf.DAddr4,254)||(parseInt(cf.DAddr4.value,10)==0))
			msg+= "Invalid primary DNS address. Please enter it again.n";
		else
		{
			cf.DAddr1.value = parseInt(cf.DAddr1.value,10);
			cf.DAddr2.value = parseInt(cf.DAddr2.value,10);
			cf.DAddr3.value = parseInt(cf.DAddr3.value,10);
			cf.DAddr4.value = parseInt(cf.DAddr4.value,10);
		}
		if(cf.PDAddr1.value.length>0 || cf.PDAddr2.value.length>0 || cf.PDAddr3.value.length>0 || cf.PDAddr4.value.length>0)
		{
			if(checkIP(cf.PDAddr1,cf.PDAddr2,cf.PDAddr3,cf.PDAddr4,254)||(parseInt(cf.PDAddr4.value,10)==0))
				msg+= "Invalid secondary DNS address. Please enter it again.n";
			else
			{
				cf.PDAddr1.value = parseInt(cf.PDAddr1.value,10);
				cf.PDAddr2.value = parseInt(cf.PDAddr2.value,10);
				cf.PDAddr3.value = parseInt(cf.PDAddr3.value,10);
				cf.PDAddr4.value = parseInt(cf.PDAddr4.value,10);
			}
		}
	}
	if( checkMacStr(cf.Spoofmac) || MacStrallf(cf.Spoofmac) )
		msg+= "Invalid MAC address.";
	if (msg.length > 1)
	{
		alert(msg);
		return false;
	}
	
	//Check whether to enable internet static pppoe mode
    if (region_gui == "Russian")
    {
		//l2tp_ip_sel means internet pppoe connection
		if(cf.WANAssign[1].checked)
			cf.l2tp_ip_sel.value = 1;
		else
			cf.l2tp_ip_sel.value = 0;
    }
	
	
	cf.l2tp_user_netmask.value = cf.mymask_1.value+'.'+cf.mymask_2.value+'.'+cf.mymask_3.value+'.'+cf.mymask_4.value;
	cf.l2tp_user_ip.value = cf.myip_1.value+'.'+cf.myip_2.value+'.'+cf.myip_3.value+'.'+cf.myip_4.value;

	if(openvpnEnable == "enable"){
		if(wan_ip != cf.l2tp_user_ip.value){
			alert("You have changed your Static IP address for the Internet connection, which is being used by the VPN Service. Please follow the Step 2 and Step 3 for VPN client installation to download and install the configuration files on each of your VPN client devices (overwrite existing configuration files).");
		}
	}
	
	cf.l2tp_gateway.value = cf.mygw_1.value+'.'+cf.mygw_2.value+'.'+cf.mygw_3.value+'.'+cf.mygw_4.value;
	cf.wan_dns1_pri.value = cf.DAddr1.value+'.'+cf.DAddr2.value+'.'+cf.DAddr3.value+'.'+cf.DAddr4.value;
	cf.wan_dns1_sec.value = cf.PDAddr1.value+'.'+cf.PDAddr2.value+'.'+cf.PDAddr3.value+'.'+cf.PDAddr4.value;
	cf.wan_hwaddr2.value = cf.Spoofmac.value;
	cf.wan_aggr.value = ($("#topframe").contents()[0].forms[0].WANAggr[1].checked)? "1" : "0";
    <% nvram_invmatch("support_2dot5g_wan", "1", "/*") %>
    if($("#topframe").contents()[0].forms[0].WANAggr[2].checked) // aggr
       cf.wan_aggr.value = "1";
    else if($("#topframe").contents()[0].forms[0].WANAggr[1].checked)//multigiga
        cf.wan_aggr.value = "2";
    else //internet
        cf.wan_aggr.value = "0";
	<% nvram_invmatch("support_2dot5g_wan", "1", "*/") %>

    setDisabled(false,cf.l2tp_dod);

	return sumvalue(cf);
}

function loadSettings()
{
    var cf = document.forms[0];
    var l2tp_user_ip = cf.l2tp_user_ip.value.split(".");
    var l2tp_user_netmask = cf.l2tp_user_netmask.value.split(".");
    var l2tp_gateway = cf.l2tp_gateway.value.split(".");
    var region_gui = cf.gui_region.value;

    var wan_ipaddr = cf.wan_ipaddr.value.split(".");
    var l2tp_localip = cf.l2tp_localip.value.split(".");
    //var l2tp_localnetmask = cf.l2tp_localnetmask.value.split(".");
    var wan_dns_sel = cf.wan_dns_sel.value;
    var wan_dns1_pri = cf.wan_dns1_pri.value.split(".");
    var wan_dns1_sec = cf.wan_dns1_sec.value.split(".");
    var wan_hwaddr_sel = cf.wan_hwaddr_sel.value;
	var wan_auto_dns_pri = cf.wan_auto_dns_pri.value.split(".");
	var wan_auto_dns_sec = cf.wan_auto_dns_sec.value.split(".");

    // Get l2tp_dod (nvram)
    cf.l2tp_dod.selectedIndex = NVRAM_l2tp_dod;
    CurrentDodIndex=cf.l2tp_dod.selectedIndex;
    if (cf.l2tp_dod.selectedIndex == 1)
        DodDisable = false;
    else
        DodDisable = true;
    setDisabled(DodDisable,cf.l2tp_idletime);
    if (cf.ipv6_proto.value == "6to4" || 
        (cf.ipv6_proto.value == "auto" && cf.ipv6_proto_auto.value == "6to4"))
    {
        cf.l2tp_dod.selectedIndex = 0;
        setDisabled(true,cf.l2tp_dod);
        setDisabled(true,cf.l2tp_idletime);
    }
    
    if(cf.static_l2tp_enable.value == 1)
    {
        if (cf.l2tp_user_ip.value != "")
        {
            cf.myip_1.value = l2tp_user_ip[0];
            cf.myip_2.value = l2tp_user_ip[1];
            cf.myip_3.value = l2tp_user_ip[2];
            cf.myip_4.value = l2tp_user_ip[3];
        }
        if (cf.l2tp_user_netmask.value != "")
        {
            cf.mymask_1.value = l2tp_user_netmask[0];
            cf.mymask_2.value = l2tp_user_netmask[1];
            cf.mymask_3.value = l2tp_user_netmask[2];
            cf.mymask_4.value = l2tp_user_netmask[3];
        }

        if (cf.l2tp_gateway.value != "")
        {
            cf.mygw_1.value = l2tp_gateway[0];
            cf.mygw_2.value = l2tp_gateway[1];
            cf.mygw_3.value = l2tp_gateway[2];
            cf.mygw_4.value = l2tp_gateway[3];
        }
    }
    else
    {
        setDisabled(true, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    }
    if ( (cf.l2tp_user_ip.value == "...") || (cf.l2tp_user_ip.value == "") )
    {
        setDisabled(true, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    }
    
    //Internet L2TP interface
    if (region_gui == "Russian")
    {
        if (cf.l2tp_localip.value == "0.0.0.0")
        {
          cf.WANAssign[0].checked = true;
          cf.WPethr1.value = wan_ipaddr[0];
          cf.WPethr2.value = wan_ipaddr[1];
          cf.WPethr3.value = wan_ipaddr[2];
          cf.WPethr4.value = wan_ipaddr[3];
        }
        else
        {
          cf.WANAssign[1].checked = true;
          cf.WPethr1.value = l2tp_localip[0];
          cf.WPethr2.value = l2tp_localip[1];
          cf.WPethr3.value = l2tp_localip[2];
          cf.WPethr4.value = l2tp_localip[3];
        }
    }
    
    cf.l2tp_serv_ip.value = cf.serv_ip.value;
    cf.DNSAssign[wan_dns_sel].checked = true;
    dns_update();
    setDNS();
    if (region_gui == "Russian")
        setIP();
	if(wan_dns_sel=="1")
	{
		if (cf.wan_dns1_pri.value != "")
		{
			cf.DAddr1.value = wan_dns1_pri[0];
			cf.DAddr2.value = wan_dns1_pri[1];
			cf.DAddr3.value = wan_dns1_pri[2];
			cf.DAddr4.value = wan_dns1_pri[3];
		}
		if (cf.wan_dns1_sec.value != "")
		{
			cf.PDAddr1.value = wan_dns1_sec[0];
			cf.PDAddr2.value = wan_dns1_sec[1];
			cf.PDAddr3.value = wan_dns1_sec[2];
			cf.PDAddr4.value = wan_dns1_sec[3];
		}
	} else
	{
		if (cf.wan_auto_dns_pri.value != "")
		{
			cf.DAddr1.value = wan_auto_dns_pri[0];
			cf.DAddr2.value = wan_auto_dns_pri[1];
			cf.DAddr3.value = wan_auto_dns_pri[2];
			cf.DAddr4.value = wan_auto_dns_pri[3];
		}
		if (cf.wan_auto_dns_sec.value != "")
		{
			cf.PDAddr1.value = wan_auto_dns_sec[0];
			cf.PDAddr2.value = wan_auto_dns_sec[1];
			cf.PDAddr3.value = wan_auto_dns_sec[2];
			cf.PDAddr4.value = wan_auto_dns_sec[3];
		}
	}

    if (wan_hwaddr_sel == 0)
        cf.Spoofmac.value = cf.wan_hwaddr_def.value;
    else if (wan_hwaddr_sel == 2)
        cf.Spoofmac.value = cf.wan_hwaddr2.value;
    cf.MACAssign[wan_hwaddr_sel].checked = true;
}

function myip_update()
{
    var cf = document.forms[0];

    if((cf.myip_1.value.length>0)&&(cf.myip_2.value.length>0)&&(cf.myip_3.value.length>0)&&(cf.myip_4.value.length>0))
    {
        setDisabled(false, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    }
    else
    {
        setDisabled(true, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    } 
    dns_update();
}
function dns_update()
{
    var cf = document.forms[0];
    var region_gui = cf.gui_region.value;
    
    if((cf.myip_1.value.length>0)&&(cf.myip_2.value.length>0)&&(cf.myip_3.value.length>0)&&(cf.myip_4.value.length>0))
    {
        var data = cf.l2tp_serv_ip.value.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/);
        if ((data && isValidIPaddr(cf.l2tp_serv_ip.value)) || (cf.l2tp_serv_ip.value == ""))
        {
            cf.DNSAssign[0].disabled = false;
            cf.DNSAssign[1].disabled = false;
        }
        else
        {
            cf.DNSAssign[0].disabled = true;
            cf.DNSAssign[1].checked = true;
        }
    }
    else
    {
        cf.DNSAssign[0].disabled = false;
        cf.DNSAssign[1].disabled = false;
    } 
    setDNS();
}
function pw_onfocus()
{
    var cf = document.forms[0];
    cf.l2tp_passwd.value = "";
    
    document.getElementById("passwdEnterStatus").innerHTML="<input id=\"l2tp_passwd\" type=\"text\" class=\"input1\" name=\"l2tp_passwd\" size=\"15\" style=\"width:180px\" maxlength=\"63\" value=\"\">";       
    setTimeout("document.forms[0].l2tp_passwd.focus();", 50);
    return true;
}

function doTypeChange( newIndex )
{
	var cf = document.forms[0];
	var wan_proto = cf.wan_proto.value;

	if (newIndex == 0)
	{
		window.location.href = "BAS_ether.htm";
	} 
	else if (newIndex == 1)
	{
		if (wan_proto == "pptp")
			window.location.href = "BAS_pptp.htm";
        else if (wan_proto == "l2tp")
			window.location.href = "BAS_l2tp.htm";   
		else
			window.location.href = "BAS_pppoe.htm";
	}
}
</script>
</html>

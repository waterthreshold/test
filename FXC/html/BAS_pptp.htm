<html>
<head>
<title>W6B-T223-001</title>
<meta content="width=device-width, initial-scale=1.0, shrink-to-fit=no" name="viewport">
<link href="css/new_custom.css" rel="stylesheet" type="text/css">
<script src="jquery.js"></script>
<script src="script/script.js"></script>
<script src="func.js"></script>
<script src="utility.js"></script>
</head>

<body onload="loadSettings();loadcheck();SkipParentalControlCheck=0" class="page-body">
<div class="container-fluid frame-content" id="frame-content">
    <div class="row">
        <div class="col-md-12">
            <form id="target"  name="formname" method="POST" action="pptp.cgi">
                <input type="hidden" name="buttonHit">
                <input type="hidden" name="buttonValue"> 
                <div class="card card-notify card-yellow ">
                    <div class="card-header card-flex">
                        <div class="card-title">Does your Internet connection require a login?</div>
                        <div class="card-margin-left">
                            <button type="button" name="Edit" class="btn" onClick="doTypeChange(0)">NO</button>
                            <button type="button" name="Edit" class="btn" onClick="">YES</button>
                        </div>
                    </div>

                    <input type="hidden" id="loginreq" name="loginreq" value="pppoe">
                </div>
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-pills">
                            <li class="nav-item" onclick="window.location.href='BAS_pppoe.htm'">
                                <a class="nav-link">PPPoE</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active">PPTP</a>
                            </li>
                            <li class="nav-item" onclick="window.location.href='BAS_l2tp.htm'">
                                <a class="nav-link">L2TP</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="mui-textfield">
                            <input id="pptp_username" class="form-control" type="text" name="pptp_username" maxlength="63" value="<% nvram_get("pptp_username"); %>">
                            <label tabindex="-1">Login</label>
                        </div>
                        <div class="mui-textfield">
                            <input id="pptp_passwd" type="password" class="form-control" name="pptp_passwd" maxlength="63" value="<% nvram_get("pptp_passwd"); %>" onfocus="pw_onfocus();">
                            <label tabindex="-1"><%getstr("basic_pppoe_passwd");%></label>
                        </div>
                        <div class="mui-textfield">
                            <select class="form-control" id="pptp_dod" name="pptp_dod" onChange="setConnMode()" size="1">
                                <option value=0><%getstr("basic_mode_always");%></option>
                                <option value=1><%getstr("basic_mode_dial");%></option>
                                <option value=2><%getstr("basic_mode_manual");%></option>
                            </select>
                            <label tabindex="-1"><%getstr("basic_int_connection_mode");%></label>
                        </div>
                        <div class="mui-textfield">
                            <input id="pptp_idletime" class="form-control" type="text" name="pptp_idletime" maxlength="3" value="<% nvram_get("pptp_idletime"); %>">
                            <label tabindex="-1"><%getstr("basic_idle");%></label>
                        </div>
                    </div>
              
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">PPTP Setup</div>
                    </div>
                    <div class="card-body">
                        <div class="mui-textfield input-ip">
                            <input id="myip1" type="text" name="myip_1" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                            <input id="myip2" type="text" name="myip_2" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="myip3" type="text" name="myip_3" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="myip4" type="text" name="myip_4" class="form-control" maxlength="3" onBlur="myip_update()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                            <label tabindex="-1"><%getstr("basic_pptp_myip");%></label>
                        </div>
                        <div class="mui-textfield input-ip">
                            <input id="mymask1" type="text" name="mymask_1" class="form-control" maxlength="3" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                            <input id="mymask2" type="text" name="mymask_2" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="mymask3" type="text" name="mymask_3" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="mymask4" type="text" name="mymask_4" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                            <label tabindex="-1"><%getstr("info_mark_mask");%></label>
                        </div>
                        <div class="mui-textfield input-ip">
                            <input id="mygw1" type="text" name="mygw_1" class="form-control" maxlength="3" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                            <input id="mygw2" type="text" name="mygw_2" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="mygw3" type="text" name="mygw_3" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="mygw4" type="text" name="mygw_4" class="form-control" maxlength="3" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                            <label tabindex="-1"><%getstr("lan_mark_gateway");%></label>
                        </div>
                        <div class="mui-textfield">
                            <input id="pptp_serv_ip" class="form-control" type="text" name="pptp_serv_ip" maxlength="63" value="" onBlur="dns_update();">
                            <label tabindex="-1"><%getstr("basic_pptp_servip");%></label>
                        </div>
                        <div class="mui-textfield">
                            <input id="pptp_conn_id" class="form-control" type="text" name="pptp_conn_id" maxlength="63" value="<% nvram_get("pptp_conn_id"); %>">
                            <label tabindex="-1"><%getstr("basic_pptp_connection_id");%></label>
                        </div>
                    </div>
                    <% lang_cgi_get_param("region_func","ru_start"); %>
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">IP Address Setup</div>
                    </div>
                    <div class="card-body">
                        <p><%getstr("basic_int_intip");%></p>
                        <div class="form-check form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="BAS_pptp_WANAssign1" type="radio" name="WANAssign" value="Dynamic" onClick="setIP()"><%getstr("basic_int_autoip");%>
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="BAS_pptp_WANAssign2" type="radio" name="WANAssign" value="Fixed" onClick="setIP()"><%getstr("basic_int_static_ip");%>
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="mui-textfield input-ip mui-textfield-next">
                            <input id="BAS_pptp_WPethr1" type="text" name="WPethr1" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                            <input id="BAS_pptp_WPethr2" type="text" name="WPethr2" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="BAS_pptp_WPethr3" type="text" name="WPethr3" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input id="BAS_pptp_WPethr4" type="text" name="WPethr4" class="form-control" maxlength="3" onFocus="if(DisableFixedIP) this.blur()" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)">
                        </div>
                    </div>
                    <% lang_cgi_get_param("region_func","ru_end"); %>
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">DNS Address Setup</div>
                    </div>
                    <div class="card-body">
                        <p><%getstr("basic_int_dns");%></p>
                        <div class="form-check form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="dns_assign_auto" type="radio" name="DNSAssign" value="0" onClick="setDNS()">
                                <%getstr("basic_int_autodns");%>
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="dns_assign_static" type="radio" name="DNSAssign" value="1" onClick="setDNS()">
                                <%getstr("basic_int_these");%>
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="mui-textfield input-ip">
                            <input id="primary_dns_address1" type="text" name="DAddr1" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,1)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,0)">.
                            <input id="primary_dns_address2" type="text" name="DAddr2" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,0)">.
                            <input id="primary_dns_address3" type="text" name="DAddr3" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,0)">.
                            <input id="primary_dns_address4" type="text" name="DAddr4" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,1)">
                            <label tabindex="-1"><%getstr("basic_int_primary_dns");%></label>
                        </div>
                        <div class="mui-textfield input-ip">
                            <input id="second_dns_address1" type="text" name="PDAddr1" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,1)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,0)">.
                            <input id="second_dns_address2" type="text" name="PDAddr2" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,0)">.
                            <input id="second_dns_address3" type="text" name="PDAddr3" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,0)">.
                            <input id="second_dns_address4" type="text" name="PDAddr4" class="form-control" maxlength="3" onFocus="if(DisableFixedDNS) this.blur()" onkeydown="if(isParentalControlEnable()) return false;bscheck(event,this,0)" onkeyup="if(isParentalControlEnable()){ alert('<%getstr("opendns_warning");%>');return false;} jumpcheck(this,1)">
                            <label tabindex="-1"><%getstr("basic_int_second_dns");%></label>
                        </div>
                    </div>
                    <div class="card-divider"></div>
                    <div class="card-subheader">
                        <div class="card-title">MAC Address Setup</div>
                    </div>
                    <div class="card-body">
                        <p><%getstr("basic_int_mac");%></p>
                        <div class="form-check form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mac_assign_default" type="radio" name="MACAssign" value="0" onClick="setMAC()">
                                <%getstr("basic_int_default_mac");%>
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mac_assign_computer" type="radio" name="MACAssign" value="1" onClick="setMAC()">
                                <%getstr("basic_int_computer_mac");%>
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <div class="form-check form-check-radio form-check-next">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mac_assign_define" type="radio" name="MACAssign" value="2" onClick="setMAC()">
                                <%getstr("basic_int_this_mac");%>
                                <span class="circle">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                        <input id="spoof_mac" type="text" class="form-control form-check-next" name="Spoofmac" maxlength="17" value="" onFocus="if(DisableFixedMAC) this.blur()">
                    </div>
                    <div class="card-bottom">
                        <div class="pull-right">
                            <button id="apply" type="submit" value="SUBMIT" onClick="buttonClick(this,'<%getstr("apply_mark");%>');return checkData()" name="apply" class="<%gui_get_guest_or_admin_mode("0");%> btn btn-primary btn-mg-15 btn-round"><%getstr("apply_change_mark");%></button>
                        </div>
                    </div>
                </div>

                <input type="hidden" name="runtest" value="">
                <input name=wan_ipaddr type=hidden value= "">
                <input name=pptp_localip type=hidden value= "">
                <input name=pptp_user_ip type=hidden value= "">
                <input name=serv_ip type=hidden value= "">
                <input name=wan_dns_sel type=hidden value= "">
                <input name=wan_dns1_pri type=hidden value= "">
                <input name=wan_dns1_sec type=hidden value= "">
                <input name=wan_hwaddr_sel type=hidden value= "<% nvram_get("wan_hwaddr_sel"); %>">
                <input name=wan_hwaddr_def type=hidden value= "<% nvram_get("wan_hwaddr"); %>">
                <input name=wan_hwaddr2 type=hidden value= "<% nvram_get("wan_hwaddr2"); %>">
                <input name=wan_hwaddr_pc type=hidden value= "<% basic_cgi_get_param("pcmac"); %>">
                <input name=pptp_gateway type=hidden value="<%nvram_get("pptp_gateway");%>">
                <input name=gui_region type=hidden value="<%lang_cgi_get_param("gui_region");%>">
                <input name=pptp_user_netmask type=hidden value="<%nvram_get("pptp_user_netmask");%>">
                <input name=static_pptp_enable type=hidden value= "<% nvram_get("static_pptp_enable"); %>">
                <input name=pptp_ip_sel type=hidden value= "<% nvram_get("pptp_ip_sel"); %>">
                <input name=gui_language type=hidden value= "<% nvram_get("gui_region"); %>">
                <input name=auto_time type=hidden value= "<% nvram_get("auto_conn_time"); %>">
                <input name=ipv6_proto type=hidden value= "<% nvram_get("ipv6_proto"); %>">
                <input name=ipv6_proto_auto type=hidden value= "<% nvram_get("ipv6_proto_auto"); %>">
                <input name=auto_conn_time_default type=hidden value= "0">
                <input name=parental_control type=hidden value= "<% nvram_get("ParentalControl"); %>">
                <input name=parental_circle type=hidden value= "<% nvram_get("enable_circle_control"); %>">
                <input name=dial_on_demand_warning type=hidden value= "<% get_dial_demand_warning(); %>">
                <input name=wan_auto_dns_pri type=hidden value= "<% nvram_list("wan_dns", 0); %>">
                <input name=wan_auto_dns_sec type=hidden value= "<% nvram_list("wan_dns", 1); %>">
                <input name="wan_aggr" type=hidden value="<% nvram_get("bond_wan"); %>">
                <input name=wan_proto type=hidden value= "">
                <input name=spc_provisioned type=hidden value= "<% d2_match("CircleStatus.activationStatus","provisioned","1"); %>">
                <input name=enable_ap_mode type=hidden value= "">
            </form>
        </div>
    </div>
</div>
</body>

<script>
var DisableFixedDNS = false;
var DisableFixedMAC = false;
var MacAddress;
var DodDisable = false;
var DodIndex = <% nvram_get("pptp_dod"); %>;
var SkipParentalControlCheck=1;
var CurrentDodIndex;

$(document).ready(function()
{    
    $("#target").submit(function() {
        buttonFilter();
    });
});
  
function checkType(wan_proto) // called from basictop.htm
{
    if (1)
    {
        if (wan_proto == "pppoe")
            window.location.href = "BAS_pppoe.htm";
        else if (wan_proto == "pptp")
            window.location.href = "BAS_pptp.htm";
        else if (wan_proto == "bpa")
            window.location.href = "BAS_bpa.htm";
        else if (wan_proto == "l2tp")
            window.location.href = "BAS_l2tp.htm";
        <% gui_cgi_check_feature_support("orange_isp", "js", "start"); %>
        else if (wan_proto == "orange_pppoe")
            window.location.href = "BAS_orange_pppoe.htm";
        else if (wan_proto == "orange_dhcp")
            window.location.href = "BAS_orange_dhcp.htm";
        <% gui_cgi_check_feature_support("orange_isp", "js", "end"); %>
        else
            window.location.href = "BAS_ether.htm";
    }
    else 
        window.setTimeout(checkType(),300);
}

function loadcheck()
{
    var cf = document.forms[0];
    var region_gui = cf.gui_region.value;

    MacAddress=document.formname.Spoofmac.value;
    if (region_gui == "Russian")
        setIP();
    setDNS();
    setMAC();
}

function setIP()
{
    var cf = document.forms[0];
    var dflag = cf.WANAssign[0].checked;
    var region_gui = cf.gui_region.value;
    setDisabled(dflag,cf.WPethr1,cf.WPethr2,cf.WPethr3,cf.WPethr4);
    
    DisableFixedIP = dflag;
}

function isParentalControlEnable()
{
    var cf = document.forms[0];
    if(((cf.parental_control.value=='1')) && (SkipParentalControlCheck==0))
        return true;
    else
        return false;
}

function isCircleControlEnable()
{
    var cf = document.forms[0];
    if(( (cf.parental_circle.value=='1')) && (SkipParentalControlCheck==0))
        return true;
    else
        return false;
}

function isSPCEnable()
{
    var cf = document.forms[0];
    if(( (cf.spc_provisioned.value=='1')) && (cf.enable_ap_mode.value!='1'))
        return true;
    else
        return false;
}

function setDNS()
{
    var cf = document.forms[0];
    var dflag = (cf.DNSAssign[0].checked || cf.DNSAssign[1].disabled);

  if(isParentalControlEnable() && cf.DNSAssign[0].checked)
  {
      alert('<%getstr("opendns_warning");%>');
        cf.DNSAssign[1].checked=true;
    dflag=false;      
  }

  if(isCircleControlEnable() && cf.DNSAssign[1].checked)
  {
    alert('<%getstr("opendns_warning");%>');
        cf.DNSAssign[0].checked=true;
  }

    if(isSPCEnable())
    {
        dflag=true; 
    }
    setDisabled(dflag,cf.DAddr1,cf.DAddr2,cf.DAddr3,cf.DAddr4,cf.PDAddr1,cf.PDAddr2,cf.PDAddr3,cf.PDAddr4);
    DisableFixedDNS = dflag;
}

function setMAC()
{
    var cf = document.forms[0];

    if (cf.MACAssign[0].checked)
        cf.Spoofmac.value = cf.wan_hwaddr_def.value;
    else if(cf.MACAssign[1].checked)
        cf.Spoofmac.value = cf.wan_hwaddr_pc.value;
    else if (cf.MACAssign[2].checked)
        cf.Spoofmac.value = cf.wan_hwaddr2.value;

    if (cf.MACAssign[2].checked)
        cf.Spoofmac.disabled = false;
    else
        cf.Spoofmac.disabled = true;
    DisableFixedMAC = cf.Spoofmac.disabled;
}

function show_idleout(form,conn_mode)
{
    var cf = document.forms[0];
    if(conn_mode == 1) // Dial on Demand
    {
        DodDisable = false;
        if(cf.gui_language.value == "German")
        {
              
            var List = document.getElementById('auto_conn_time_id');          
            cf.auto_conn_24hr.disabled = true;
            List.disabled = true;
        }
    }
    else
    {
        DodDisable = true;
        if(cf.gui_language.value == "German")
        {
            //sSpan.style.background="url(selects_disabled.gif) no-repeat right center"; 
            var List = document.getElementById('auto_conn_time_id');           
            cf.auto_conn_24hr.disabled = false;
            List.disabled = false;


        }
    }
}

function setConnMode()
{
    var cf = document.forms[0];
    var conn_mode = cf.pptp_dod.selectedIndex;

/*
    if(conn_mode == 1) // Dial on Demand
    {
        DodDisable = false;
        if(cf.gui_language.value == "German")
        {
            cf.auto_conn_24hr.disabled = true;
            cf.auto_conn_time.disabled = true;
        }
    }
    else
    {
        DodDisable = true;
        if(cf.gui_language.value == "German")
        {
            cf.auto_conn_24hr.disabled = false;
            cf.auto_conn_time.disabled = false;
        }
    }
*/
    show_idleout(cf, conn_mode);

    var msg = "";
    if((conn_mode != 1) && !_isNumeric(cf.pptp_idletime.value))
    {
        cf.pptp_dod.selectedIndex = DodIndex;
        if(cf.pptp_idletime.value.length<=0)
            msg+= "<%getstr("idle_time_null");%>";
        else if(!_isNumeric(cf.pptp_idletime.value))
            msg+= "<%getstr("m_proper_time");%>";
        if (msg.length > 1)
        {
            alert(msg);
            return false;
        }
    }
    else
    {
        DodIndex = cf.pptp_dod.selectedIndex;
        setDisabled(DodDisable,cf.pptp_idletime);
    }
    return true;
}

function checkData()
{
    var cf = document.forms[0];
    var msg = "";
    var region_gui = cf.gui_region.value;
    var wan_ip  = "<% nvram_get("pptp_user_ip"); %>";
    var openvpnEnable = "<% nvram_get("openvpnActive"); %>";
    var conn_mode = cf.pptp_dod.selectedIndex;
    
    var wan_proto = "<% nvram_get("wan_proto"); %>";
    var pppoe_single_login = "<% nvram_get("single_pppoe_login"); %>";

    if(cf.dial_on_demand_warning.value==1)
    {
          {
            if((conn_mode == 1 || conn_mode == 2)) // Dial on Demand and manually
            {
                if(!confirm("<%getstr("dial_on_daemon_warning");%>"))
                {
                      cf.pptp_dod.selectedIndex=CurrentDodIndex;
                    return false;
                }
            }
        }
    }

    if (wan_proto == "pppoe" && cf.ipv6_proto.value == "pppoe" && pppoe_single_login == 1)
    {
        if (!confirm("<%getstr("pppoe_share_warning")%>"))
            return false;
    }

    msg+= checkBlank(cf.pptp_username, "<%getstr("ddns_username");%>");
    if(cf.pptp_idletime.value.length<=0)
     msg+= "<%getstr("idle_time_null");%>";
    else if(!_isNumeric(cf.pptp_idletime.value))
     msg+= "<%getstr("m_proper_time");%>";
    
    if((cf.myip_1.value.length>0)||(cf.myip_2.value.length>0)||(cf.myip_3.value.length>0)||(cf.myip_4.value.length>0))
    {
        if(!((cf.mymask_1.value.length>0)||(cf.mymask_2.value.length>0)||(cf.mymask_3.value.length>0)||(cf.mymask_4.value.length>0)))
        {
            if(!checkIP(cf.myip_1,cf.myip_2,cf.myip_3,cf.myip_4,255))
            {
                if (cf.myip_1.value > 191) //class C
                {
                    cf.mymask_1.value = 255;
                    cf.mymask_2.value = 255;
                    cf.mymask_3.value = 255;
                    cf.mymask_4.value = 0;
                }
                else if (cf.myip_1.value > 127) //class B
                {
                    cf.mymask_1.value = 255;
                    cf.mymask_2.value = 255;
                    cf.mymask_3.value = 0;
                    cf.mymask_4.value = 0;
                }
                else //class A
                {
                    cf.mymask_1.value = 255;
                    cf.mymask_2.value = 0;
                    cf.mymask_3.value = 0;
                    cf.mymask_4.value = 0;
                }
            }
        }
        else if(checkIP(cf.mymask_1,cf.mymask_2,cf.mymask_3,cf.mymask_4,255))
            msg += "<%getstr("invalid_mask");%>";
        
        
        if(checkIP(cf.myip_1,cf.myip_2,cf.myip_3,cf.myip_4,255))
            msg+= "<%getstr("invalid_myip");%>";
        else
        {
            cf.myip_1.value = parseInt(cf.myip_1.value,10);
            cf.myip_2.value = parseInt(cf.myip_2.value,10);
            cf.myip_3.value = parseInt(cf.myip_3.value,10);
            cf.myip_4.value = parseInt(cf.myip_4.value,10);
        }

        if (cf.DNSAssign[1].checked )
        {
            var myIpAddr = (cf.myip_1.value << 24) | (cf.myip_2.value << 16) | (cf.myip_3.value << 8) | (cf.myip_4.value);
            var netMask = (cf.mymask_1.value << 24) | (cf.mymask_2.value << 16) | (cf.mymask_3.value << 8) | (cf.mymask_4.value);
            var dnsIpAddr1 = (cf.DAddr1.value << 24) | (cf.DAddr2.value << 16) | (cf.DAddr3.value << 8) | (cf.DAddr4.value);
            var dnsIpAddr2 = (cf.PDAddr1.value << 24) | (cf.PDAddr2.value << 16) | (cf.PDAddr3.value << 8) | (cf.PDAddr4.value);
            if(((myIpAddr&netMask) != (dnsIpAddr1&netMask)) && ((myIpAddr&netMask) != (dnsIpAddr2&netMask)))
            {
                if(!((cf.mygw_1.value.length>0)||(cf.mygw_2.value.length>0)||(cf.mygw_3.value.length>0)||(cf.mygw_4.value.length>0)))
                {
                    msg+= "<%getstr("invalid_gateway");%>";
                }
            }
        }

        cf.static_pptp_enable.value = 1;
    }
    else
        cf.static_pptp_enable.value = 0;

    if((cf.mygw_1.value.length>0)||(cf.mygw_2.value.length>0)||(cf.mygw_3.value.length>0)||(cf.mygw_4.value.length>0))
    {
        var myIpAddr = (cf.myip_1.value << 24) | (cf.myip_2.value << 16) | (cf.myip_3.value << 8) | (cf.myip_4.value);
        var netMask = (cf.mymask_1.value << 24) | (cf.mymask_2.value << 16) | (cf.mymask_3.value << 8) | (cf.mymask_4.value);
        var myGateway = (cf.mygw_1.value << 24) | (cf.mygw_2.value << 16) | (cf.mygw_3.value << 8) | (cf.mygw_4.value);
        var tmpip = cf.myip_1.value+'.'+cf.myip_2.value+'.'+cf.myip_3.value+'.'+cf.myip_4.value;
        var tmpgateway = cf.mygw_1.value+'.'+cf.mygw_2.value+'.'+cf.mygw_3.value+'.'+cf.mygw_4.value;
    
        if(checkIP(cf.mygw_1,cf.mygw_2,cf.mygw_3,cf.mygw_4,255))
            msg+= "<%getstr("invalid_gateway");%>";
        //else if((myIpAddr&netMask) != (myGateway&netMask))
        //{
        //    msg+= '<%getstr("err_ip");%>' +tmpip+ '<%getstr("err_ip_in_different_subnet");%>'+ tmpgateway+'\n';
        //}
        else
        {
            cf.mygw_1.value = parseInt(cf.mygw_1.value,10);
            cf.mygw_2.value = parseInt(cf.mygw_2.value,10);
            cf.mygw_3.value = parseInt(cf.mygw_3.value,10);
            cf.mygw_4.value = parseInt(cf.mygw_4.value,10);
        }
    }

    var data;
    data = cf.pptp_serv_ip.value.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/);
    if ((data && !isValidIPaddr(cf.pptp_serv_ip.value))
        || cf.pptp_serv_ip.value == ""
        || cf.pptp_serv_ip.value.match( /[^\x20-\x7E]/ ))
        msg+= "<%getstr("invalid_servip");%>";

    if (region_gui == "Russian")
    {
        if(cf.WANAssign[1].checked)
        {
            if(checkIP(cf.WPethr1,cf.WPethr2,cf.WPethr3,cf.WPethr4,254)||(parseInt(cf.WPethr4.value,10)==0))
                msg+= "<%getstr("invalid_static_ip");%>";
            else
            {
                cf.WPethr1.value = parseInt(cf.WPethr1.value,10);
                cf.WPethr2.value = parseInt(cf.WPethr2.value,10);
                cf.WPethr3.value = parseInt(cf.WPethr3.value,10);
                cf.WPethr4.value = parseInt(cf.WPethr4.value,10);
            }
            cf.pptp_localip.value = cf.WPethr1.value+'.'+cf.WPethr2.value+'.'+cf.WPethr3.value+'.'+cf.WPethr4.value;
            
        }
        else
        {
            cf.pptp_localip.value = "0.0.0.0";
            //cf.pppoe_localnetmask.value = "...";
        }
    }
    if(cf.DNSAssign[1].checked && !cf.DNSAssign[1].disabled)
    {    
        if(checkIP(cf.DAddr1,cf.DAddr2,cf.DAddr3,cf.DAddr4,254)||(parseInt(cf.DAddr4.value,10)==0))
            msg+= "<%getstr("invalid_primary_dns");%>";
        else
        {
            cf.DAddr1.value = parseInt(cf.DAddr1.value,10);
            cf.DAddr2.value = parseInt(cf.DAddr2.value,10);
            cf.DAddr3.value = parseInt(cf.DAddr3.value,10);
            cf.DAddr4.value = parseInt(cf.DAddr4.value,10);
        }
        if(cf.PDAddr1.value.length>0 || cf.PDAddr2.value.length>0 || cf.PDAddr3.value.length>0 || cf.PDAddr4.value.length>0)
        {
            if(checkIP(cf.PDAddr1,cf.PDAddr2,cf.PDAddr3,cf.PDAddr4,254)||(parseInt(cf.PDAddr4.value,10)==0))
                msg+= "<%getstr("invalid_second_dns");%>";
            else
            {
                cf.PDAddr1.value = parseInt(cf.PDAddr1.value,10);
                cf.PDAddr2.value = parseInt(cf.PDAddr2.value,10);
                cf.PDAddr3.value = parseInt(cf.PDAddr3.value,10);
                cf.PDAddr4.value = parseInt(cf.PDAddr4.value,10);
            }
        }
    }
    if( checkMacStr(cf.Spoofmac) || MacStrallf(cf.Spoofmac) )
        msg+= "<%getstr("invalid_mac");%>";
    if (msg.length > 1)
    {
        alert(msg);
        return false;
    }
    
    //Check whether to enable internet static pppoe mode
    if (region_gui == "Russian")
    {
    //    if((cf.WANAssign[1].checked) && (cf.WMask1.value.length>0) && (cf.WMask2.value.length>0) && (cf.WMask3.value.length>0) && (cf.WMask4.value.length>0))
        //pptp_ip_sel means internet pppoe connection
        if(cf.WANAssign[1].checked)
            cf.pptp_ip_sel.value = 1;
        else
            cf.pptp_ip_sel.value = 0;
    }
    
    
    cf.pptp_user_netmask.value = cf.mymask_1.value+'.'+cf.mymask_2.value+'.'+cf.mymask_3.value+'.'+cf.mymask_4.value;
    cf.pptp_user_ip.value = cf.myip_1.value+'.'+cf.myip_2.value+'.'+cf.myip_3.value+'.'+cf.myip_4.value;

    if(openvpnEnable == "enable"){
        if(wan_ip != cf.pptp_user_ip.value){
            alert("<%getstr("openvpn_alert7");%>");
        }
    }
    
    cf.pptp_gateway.value = cf.mygw_1.value+'.'+cf.mygw_2.value+'.'+cf.mygw_3.value+'.'+cf.mygw_4.value;
    cf.wan_dns1_pri.value = cf.DAddr1.value+'.'+cf.DAddr2.value+'.'+cf.DAddr3.value+'.'+cf.DAddr4.value;
    cf.wan_dns1_sec.value = cf.PDAddr1.value+'.'+cf.PDAddr2.value+'.'+cf.PDAddr3.value+'.'+cf.PDAddr4.value;
    cf.wan_hwaddr2.value = cf.Spoofmac.value;
    //cf.wan_aggr.value = ($("#topframe").contents()[0].forms[0].WANAggr[1].checked)? "1" : "0";
    if($("#topframe").contents()[0].forms[0].WANAggr[2].checked) // aggr
       cf.wan_aggr.value = "1";
    else if($("#topframe").contents()[0].forms[0].WANAggr[1].checked)//multigiga
        cf.wan_aggr.value = "2";
    else //internet
        cf.wan_aggr.value = "0";
    
    setDisabled(false,cf.pptp_dod);

    return sumvalue(cf);
}

function loadSettings()
{
    var cf = document.forms[0];
    var pptp_user_ip = cf.pptp_user_ip.value.split(".");
    var pptp_user_netmask = cf.pptp_user_netmask.value.split(".");
    var pptp_gateway = cf.pptp_gateway.value.split(".");
    var region_gui = cf.gui_region.value;

    var wan_ipaddr = cf.wan_ipaddr.value.split(".");
    var pptp_localip = cf.pptp_localip.value.split(".");
    var wan_dns_sel = cf.wan_dns_sel.value;
    var wan_dns1_pri = cf.wan_dns1_pri.value.split(".");
    var wan_dns1_sec = cf.wan_dns1_sec.value.split(".");
    var wan_hwaddr_sel = cf.wan_hwaddr_sel.value;
    var wan_auto_dns_pri = cf.wan_auto_dns_pri.value.split(".");
    var wan_auto_dns_sec = cf.wan_auto_dns_sec.value.split(".");

    // Get pptp_dod (nvram)
    cf.pptp_dod.selectedIndex = <% nvram_get("pptp_dod"); %>;
    CurrentDodIndex=cf.pptp_dod.selectedIndex;

    if(cf.gui_language.value == "German")
    {
        var selectObj = document.getElementById("auto_conn_time_id");
        
        cf.auto_conn_time_default.value = parseInt(cf.auto_time.value, 10);
        selectObj.value = parseInt(cf.auto_time.value, 10);
    }
    /*
    if (cf.pppoe_dod.selectedIndex == 1)
    {
        DodDisable = false;
        if(cf.gui_language.value == "German")
        {
            cf.auto_conn_24hr.disabled = true;
            cf.auto_conn_time.disabled = true;
        }
    }
    else
    {
        DodDisable = true;
        if(cf.gui_language.value == "German")
        {
            cf.auto_conn_24hr.disabled = false;
            cf.auto_conn_time.disabled = false;
        }
    }
    */
    show_idleout(cf, cf.pptp_dod.selectedIndex);
    
    setDisabled(DodDisable,cf.pptp_idletime);
    if (cf.ipv6_proto.value == "6to4" || 
        (cf.ipv6_proto.value == "auto" && cf.ipv6_proto_auto.value == "6to4"))
    {
        cf.pptp_dod.selectedIndex = 0;
        setDisabled(true,cf.pptp_dod);
        setDisabled(true,cf.pptp_idletime);
    }
    
    if(cf.static_pptp_enable.value == 1)
    {
        if (cf.pptp_user_ip.value != "")
        {
            cf.myip_1.value = pptp_user_ip[0];
            cf.myip_2.value = pptp_user_ip[1];
            cf.myip_3.value = pptp_user_ip[2];
            cf.myip_4.value = pptp_user_ip[3];
        }
        if (cf.pptp_user_netmask.value != "")
        {
            cf.mymask_1.value = pptp_user_netmask[0];
            cf.mymask_2.value = pptp_user_netmask[1];
            cf.mymask_3.value = pptp_user_netmask[2];
            cf.mymask_4.value = pptp_user_netmask[3];
        }

        if (cf.pptp_gateway.value != "")
        {
            cf.mygw_1.value = pptp_gateway[0];
            cf.mygw_2.value = pptp_gateway[1];
            cf.mygw_3.value = pptp_gateway[2];
            cf.mygw_4.value = pptp_gateway[3];
        }
    }
    else
    {
        setDisabled(true, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    }
    if ( (cf.pptp_user_ip.value == "...") || (cf.pptp_user_ip.value == "") )
    {
        setDisabled(true, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    }
    
    //Internet PPTP interface
    if (region_gui == "Russian")
    {
        if (cf.pptp_localip.value == "0.0.0.0")
        {
          cf.WANAssign[0].checked = true;
          cf.WPethr1.value = wan_ipaddr[0];
          cf.WPethr2.value = wan_ipaddr[1];
          cf.WPethr3.value = wan_ipaddr[2];
          cf.WPethr4.value = wan_ipaddr[3];
        }
        else
        {
          cf.WANAssign[1].checked = true;
          cf.WPethr1.value = pptp_localip[0];
          cf.WPethr2.value = pptp_localip[1];
          cf.WPethr3.value = pptp_localip[2];
          cf.WPethr4.value = pptp_localip[3];
        }
    }
    
    cf.pptp_serv_ip.value = cf.serv_ip.value;
    cf.DNSAssign[wan_dns_sel].checked = true;
    dns_update();
    setDNS();
    if (region_gui == "Russian")
        setIP();
    if(wan_dns_sel=="1")
    {
        if (cf.wan_dns1_pri.value != "")
        {
            cf.DAddr1.value = wan_dns1_pri[0];
            cf.DAddr2.value = wan_dns1_pri[1];
            cf.DAddr3.value = wan_dns1_pri[2];
            cf.DAddr4.value = wan_dns1_pri[3];
        }
        if (cf.wan_dns1_sec.value != "")
        {
            cf.PDAddr1.value = wan_dns1_sec[0];
            cf.PDAddr2.value = wan_dns1_sec[1];
            cf.PDAddr3.value = wan_dns1_sec[2];
            cf.PDAddr4.value = wan_dns1_sec[3];
        }
    } else
    {
        if (cf.wan_auto_dns_pri.value != "")
        {
            cf.DAddr1.value = wan_auto_dns_pri[0];
            cf.DAddr2.value = wan_auto_dns_pri[1];
            cf.DAddr3.value = wan_auto_dns_pri[2];
            cf.DAddr4.value = wan_auto_dns_pri[3];
        }
        if (cf.wan_auto_dns_sec.value != "")
        {
            cf.PDAddr1.value = wan_auto_dns_sec[0];
            cf.PDAddr2.value = wan_auto_dns_sec[1];
            cf.PDAddr3.value = wan_auto_dns_sec[2];
            cf.PDAddr4.value = wan_auto_dns_sec[3];
        }
    }

    if (wan_hwaddr_sel == 0)
        cf.Spoofmac.value = cf.wan_hwaddr_def.value;
    else if (wan_hwaddr_sel == 2)
        cf.Spoofmac.value = cf.wan_hwaddr2.value;
    cf.MACAssign[wan_hwaddr_sel].checked = true;
}

function myip_update()
{
    var cf = document.forms[0];

    if((cf.myip_1.value.length>0)&&(cf.myip_2.value.length>0)&&(cf.myip_3.value.length>0)&&(cf.myip_4.value.length>0))
    {
        setDisabled(false, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    }
    else
    {
        setDisabled(true, cf.mygw_1, cf.mygw_2, cf.mygw_3, cf.mygw_4);
    } 
    dns_update();
}
function dns_update()
{
    var cf = document.forms[0];
    var region_gui = cf.gui_region.value;
    
    if((cf.myip_1.value.length>0)&&(cf.myip_2.value.length>0)&&(cf.myip_3.value.length>0)&&(cf.myip_4.value.length>0))
    {
        var data = cf.pptp_serv_ip.value.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/);
        if ((data && isValidIPaddr(cf.pptp_serv_ip.value)) || (cf.pptp_serv_ip.value == ""))
        {
            cf.DNSAssign[0].disabled = false;
            cf.DNSAssign[1].disabled = false;
        }
        else
        {
            cf.DNSAssign[0].disabled = true;
            cf.DNSAssign[1].checked = true;
        }
    }
    else
    {
        cf.DNSAssign[0].disabled = false;
        cf.DNSAssign[1].disabled = false;
    } 
    setDNS();
}

function pw_onfocus()
{
    var cf = document.forms[0];
    cf.pptp_passwd.value = "";
    
    document.getElementById("passwdEnterStatus").innerHTML="<input id=\"pptp_passwd\" type=\"password\" class=\"input1\" name=\"pptp_passwd\" size=\"15\" style=\"width:180px\" maxlength=\"63\" value=\"\">";       
    setTimeout("document.forms[0].pptp_passwd.focus();", 50);
    return true;
}

function doTypeChange( newIndex )
{
    var cf = document.forms[0];
    var wan_proto = cf.wan_proto.value;

    if (newIndex == 0)
    {
        window.location.href = "BAS_ether.htm";
    } 
    else if (newIndex == 1)
    {
        if (wan_proto == "pptp")
            window.location.href = "BAS_pptp.htm";
        else if (wan_proto == "l2tp")
            window.location.href = "BAS_l2tp.htm";   
        else
            window.location.href = "BAS_pppoe.htm";
    }
}
</script>
</html>
